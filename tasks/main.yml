---

- name: Fail on spaces in service names
  when:
    - docker_extra_service is defined
    - docker_extra_service != None
    - docker_extra_service | length > 0
  with_dict: "{{ docker_extra_service }}"
  ansible.builtin.assert:
    that:
      - "' ' not in item.key"
  no_log: true

- name: Create Docker extra service
  when:
    - item.value.parameters is defined
    - item.value.parameters != None
    - item.value.parameters | length > 0
  with_dict: "{{ docker_extra_service }}"
  ansible.builtin.template:
    src: docker-extra.service.j2
    dest: "/etc/systemd/system/docker-extra_{{ item.key }}.service"
    owner: root
    group: root
    mode: "0644"
  register: docker_extra_service_parameters
  no_log: true

- name: Create Docker extra service working directory
  when:
    - item.value.parameters is defined
    - item.value.parameters != None
    - item.value.parameters | length > 0
  with_dict: "{{ docker_extra_service }}"
  ansible.builtin.file:
    path: "/opt/docker-extra_{{ item.key }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  no_log: true

- name: Create Docker extra env
  when:
    - item.value.env is defined
    - item.value.env != None
    - item.value.env | length > 0
  with_dict: "{{ docker_extra_service }}"
  ansible.builtin.template:
    src: docker-extra.env.j2
    dest: "/opt/docker-extra_{{ item.key }}/.env"
    owner: root
    group: root
    mode: "0644"
  register: docker_extra_service_env
  no_log: true

- name: (Re)start Docker extra service
  when:
    - docker_extra_service is defined
    - docker_extra_service != None
    - docker_extra_service | length > 0
  with_items: "{{ (docker_extra_service_parameters.results + docker_extra_service_env.results) | selectattr('changed', 'equalto', true) | map(attribute='item.key') | list | unique }}"
  ansible.builtin.systemd:
    state: reloaded
    enabled: true
    daemon_reload: true
    name: "docker-extra_{{ item }}.service"
